# Solana区块解析器示例配置文件
# 此文件包含所有可配置选项的详细说明和示例值
# 复制此文件为config.yaml并根据需要修改

# 应用基本配置
app:
  name: datas-go                # 应用名称
  environment: development      # 运行环境: development, testing, production
  version: 0.1.0                # 应用版本号

# 日志配置
log:
  level: info                   # 日志级别: debug, info, warn, error, fatal
                                # debug: 输出所有日志，包括调试信息
                                # info: 输出信息、警告和错误日志
                                # warn: 只输出警告和错误日志
                                # error: 只输出错误日志
                                # fatal: 只输出致命错误日志
  
  format: console               # 日志格式: json, console
                                # json: 结构化JSON格式，适合日志分析系统
                                # console: 人类可读的格式，适合开发环境
  
  path: logs/datas-go.log       # 日志文件路径，相对于应用根目录
                                # 设置为空字符串("")则不写入文件
  
  max_size: 100                 # 单个日志文件最大大小(MB)，超过此大小将轮转
  max_backups: 3                # 最大保留日志文件数，超过将删除最旧的文件
  max_age: 7                    # 日志文件保留天数，超过此天数的文件将被删除
  compress: true                # 是否压缩轮转后的日志文件
  stdout: true                  # 是否同时输出到控制台

# Redis配置
redis:
  addr: localhost:6379          # Redis服务器地址，格式: host:port
  password: ""                  # Redis密码，不需要密码则留空
  db: 0                         # 使用的数据库编号，Redis默认有16个数据库(0-15)
  pool_size: 10                 # 连接池大小，并发连接数
  timeout: 5s                   # 连接超时时间

# WebSocket客户端配置（用于接收实时区块通知）
websocket:
  # 是否启用WebSocket连接
  # 启用后将通过WebSocket接收实时区块通知，而不是通过RPC轮询
  enabled: false
  
  # 网络类型: mainnet, devnet, testnet
  network_type: mainnet
  
  # Helius API密钥，使用Helius WebSocket服务需要提供
  # 获取API密钥: https://dev.helius.xyz/
  api_key: ""
  
  # 连接断开后的重连间隔
  reconnect_interval: 5s 

# 代理配置
proxy:
  # 是否启用代理
  enabled: false
  # 代理服务器URL，例如: http://proxy.example.com:8080
  url: ""